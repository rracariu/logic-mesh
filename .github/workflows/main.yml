on: [push, pull_request]

name: Build

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Install clippy
        run: rustup component add clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
 
  site:
    name: Build demo site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: latest
    
      - name: wasm-build
        run: wasm-pack build
      - name: npm install
        run: npm ci
        working-directory: ./web
      - name: build
        run: echo $PWD && npm run build
        working-directory: ./web
      - name: upload
        uses: actions/upload-pages-artifact@v1.0.4
        with:
            path: './web/dist/'
  deploy:
      needs: site

      # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
      permissions:
          pages: write # to deploy to Pages
          id-token: write # to verify the deployment originates from an appropriate source

      # Deploy to the github-pages environment
      environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}

      # Specify runner + deployment step
      runs-on: ubuntu-latest
      steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v1