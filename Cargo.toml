[package]
name = "logic-mesh"
version = "0.1.0"
edition = "2021"
description = "Control logic engine using event based and reactive blocks written in Rust."
license = "Proprietary"

[workspace]
members = ["block_macro"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
block_macro = { path = "block_macro"}
serde = { version = "^1.0", features = ["derive"] }
libhaystack = {version = "^1.0.10", default-features = false, features = ["value", "zinc", "json"]}
uuid = {version = "^1.2.2", features = ["v4"]}
lazy_static = "^1.4.0"
futures = "^0.3.25"
rand = "^0.8.5"
anyhow = "^1.0.70"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = {version = "^1.28.1", features = ["rt-multi-thread", "sync", "time", "macros"]}

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = {version = "^1.28.1", features = ["rt", "sync", "time", "macros"]}
wasm-bindgen = {version = "^0.2.86", features = ["serde-serialize"] }
serde-wasm-bindgen = "^0.5.0"
js-sys = "0.3.63"
web-sys = {version = "0.3.63", features = ["Window"]}
wasm-bindgen-futures = "^0.4.36"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "^0.1.6", optional = true }

[dev-dependencies]
wasm-bindgen-test = "^0.3.34"

[profile.release]
#debug = true
opt-level = "s"
lto = "on"
strip = "symbols"